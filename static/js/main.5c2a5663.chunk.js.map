{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_NAME","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverseField","setReverseField","visibleGoods","goods","prepearedGoods","sort","goods1","goods2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,OAClBC,EAAoB,SA6BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBA9BpB,OA8BpB,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EA9BR,SAA0BC,EAA1B,GAA+D,IAA5BL,EAA2B,EAA3BA,UAAWE,EAAgB,EAAhBA,aACtCI,EAAc,YAAOD,GAsB3B,OApBIL,GACFM,EAAeC,MACb,SAACC,EAAQC,GACP,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAOE,cAAcD,GAE9B,KAAKZ,EACH,OAAOW,EAAOG,OAASF,EAAOE,OAChC,QACE,OAAO,MAMbT,GACFI,EAAeM,UAGVN,EAOcO,CAAiBlB,EACpC,CAAEK,YAAWE,iBAEf,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBACZ,CAAE,WAAYhB,IAAcJ,IAC9BqB,QAAS,kBAAMhB,EAAaL,IAJ9B,iCASA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,WAAYhB,IAAcH,IAC9BoB,QAAS,kBAAMhB,EAAaJ,IAJ9B,4BASA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,WA3DQ,QA2DId,IAChBe,QAAS,kBAAMd,GAAiBD,IAJlC,sBAQEF,GAAaE,IACb,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAa,IACbE,GAAgB,IALpB,sBAcJ,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCnGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5c2a5663.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\nconst REVERSE_FIELD = false;\n\nfunction getPreparedGoods(goods, { sortField, reverseField }) {\n  const prepearedGoods = [...goods];\n\n  if (sortField) {\n    prepearedGoods.sort(\n      (goods1, goods2) => {\n        switch (sortField) {\n          case SORT_FIELD_NAME:\n            return goods1.localeCompare(goods2);\n\n          case SORT_FIELD_LENGTH:\n            return goods1.length - goods2.length;\n          default:\n            return 0;\n        }\n      },\n    );\n  }\n\n  if (reverseField) {\n    prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseField, setReverseField] = useState(REVERSE_FIELD);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer,\n    { sortField, reverseField });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SORT_FIELD_NAME })}\n          onClick={() => setSortField(SORT_FIELD_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH })}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': reverseField === REVERSE_FIELD })}\n          onClick={() => setReverseField(!reverseField)}\n        >\n          Reverse\n        </button>\n        {(sortField || reverseField) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setReverseField(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}